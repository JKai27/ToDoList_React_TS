import { GatewayserviceBaseUrl } from "./gatwayservices";
import { ClientResponse, IRequestProps } from "./interfaces";
declare class RestClient {
    constructor(baseUrl: GatewayserviceBaseUrl, additionalHeaders?: HeadersInit);
    private baseUrl;
    private additionalHeaders;
    private parseQueryObject;
    private handleRequest;
    private handleResponse;
    get<T>(url: string, { query, config }?: IRequestProps): ClientResponse<T>;
    patch<T>(url: string, { body, query, config, otherType }?: IRequestProps): ClientResponse<T>;
    put<T>(url: string, { body, query, config, otherType }?: IRequestProps): ClientResponse<T>;
    post<T>(url: string, { body, query, config, otherType }?: IRequestProps): ClientResponse<T>;
    delete<T>(url: string, { body, query, config, otherType }?: IRequestProps): ClientResponse<T>;
}
export { RestClient };
