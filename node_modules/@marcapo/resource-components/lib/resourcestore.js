var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
import Axios from "axios";
import { ResourceService } from "./resourceservice";
var ResourceStoreInstance = /** @class */ (function () {
    function ResourceStoreInstance() {
        this.resourceKeys = [];
        this.locale = window.locale || "de_DE";
        this.shopUrl = window.shopUrl || "evo";
        this.restClient = Axios.create();
    }
    ResourceStoreInstance.prototype.init = function (_a) {
        var _b = _a.shopUrl, shopUrl = _b === void 0 ? window.shopUrl || "evo" : _b, _c = _a.locale, locale = _c === void 0 ? window.locale || "de_DE" : _c, _d = _a.restClient, restClient = _d === void 0 ? Axios.create() : _d;
        this.shopUrl = shopUrl;
        this.locale = locale;
        this.restClient = restClient;
    };
    ResourceStoreInstance.prototype.initModuleSession = function (moduleSession) {
        var _a;
        this.locale =
            ((_a = moduleSession === null || moduleSession === void 0 ? void 0 : moduleSession.subjectPerson) === null || _a === void 0 ? void 0 : _a.standardLocale) || (moduleSession === null || moduleSession === void 0 ? void 0 : moduleSession.currentLocale) || "de_".concat(moduleSession === null || moduleSession === void 0 ? void 0 : moduleSession.locale);
        this.shopUrl = moduleSession === null || moduleSession === void 0 ? void 0 : moduleSession.shop.shopUrl;
    };
    ResourceStoreInstance.prototype.getResourceValue = function (key, context) {
        return __awaiter(this, void 0, void 0, function () {
            var value, resourceKey;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        value = key;
                        resourceKey = this.resourceKeys.find(function (resourceKeyTmp) { return resourceKeyTmp.key === key; });
                        if (resourceKey === null || resourceKey === void 0 ? void 0 : resourceKey.value) {
                            value = resourceKey.value;
                        }
                        if (!!resourceKey) return [3 /*break*/, 2];
                        return [4 /*yield*/, ResourceService.get(key, context)];
                    case 1:
                        value = _a.sent();
                        return [3 /*break*/, 4];
                    case 2:
                        if (!(resourceKey.value.includes("$") && context)) return [3 /*break*/, 4];
                        return [4 /*yield*/, ResourceService.resolveText(value, context)];
                    case 3:
                        value = _a.sent();
                        _a.label = 4;
                    case 4: return [2 /*return*/, value];
                }
            });
        });
    };
    ResourceStoreInstance.prototype.getUnresolvedResourceValue = function (key) {
        var value = key;
        var resourceKey = this.resourceKeys.find(function (resourceKeyTmp) { return resourceKeyTmp.key === key; });
        if (resourceKey === null || resourceKey === void 0 ? void 0 : resourceKey.value) {
            value = resourceKey.value;
        }
        return value;
    };
    Object.defineProperty(ResourceStoreInstance.prototype, "liveResource", {
        get: function () {
            var live = true;
            if (window.location.href.includes("marcapointegration") || window.location.href.includes("localhost")) {
                live = false;
            }
            return live;
        },
        enumerable: false,
        configurable: true
    });
    ResourceStoreInstance.prototype.initResourceKeys = function (resourceKeys) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Promise.all(resourceKeys.map(function (resourceKey) { return __awaiter(_this, void 0, void 0, function () {
                            var _a, _b;
                            var _c;
                            return __generator(this, function (_d) {
                                switch (_d.label) {
                                    case 0:
                                        _b = (_a = this.resourceKeys).push;
                                        _c = {
                                            key: resourceKey
                                        };
                                        return [4 /*yield*/, ResourceService.get(resourceKey, {}, true)];
                                    case 1:
                                        _b.apply(_a, [(_c.value = _d.sent(),
                                                _c)]);
                                        return [2 /*return*/];
                                }
                            });
                        }); }))];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    ResourceStoreInstance.prototype.initResourceBundle = function (resourceBundleNameStart, shopUrlOverride) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, shopUrl, locale, liveResource, resourceBundleName, resourceBundle, checkResourceKeyStart_1, resourceKeys, error_1;
            var _this = this;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        _a = this.getResourceBundleParamsFromModuleSession(), shopUrl = _a.shopUrl, locale = _a.locale, liveResource = _a.liveResource;
                        resourceBundleName = resourceBundleNameStart.split(".")[0];
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 4, , 5]);
                        return [4 /*yield*/, ResourceService.loadOrGetResourceBundleFromCache(resourceBundleName, shopUrlOverride !== null && shopUrlOverride !== void 0 ? shopUrlOverride : shopUrl, locale, liveResource)];
                    case 2:
                        resourceBundle = _b.sent();
                        checkResourceKeyStart_1 = resourceBundleName !== resourceBundleNameStart;
                        resourceKeys = Object.keys(resourceBundle);
                        return [4 /*yield*/, Promise.all(resourceKeys.map(function (resourceKey) { return __awaiter(_this, void 0, void 0, function () {
                                var _a, _b;
                                var _c;
                                return __generator(this, function (_d) {
                                    switch (_d.label) {
                                        case 0:
                                            if (!(!checkResourceKeyStart_1 || resourceKey.startsWith(resourceBundleNameStart))) return [3 /*break*/, 2];
                                            _b = (_a = this.resourceKeys).push;
                                            _c = {
                                                key: resourceKey
                                            };
                                            return [4 /*yield*/, ResourceService.get(resourceKey, {}, true)];
                                        case 1:
                                            _b.apply(_a, [(_c.value = _d.sent(),
                                                    _c)]);
                                            _d.label = 2;
                                        case 2: return [2 /*return*/];
                                    }
                                });
                            }); }))];
                    case 3:
                        _b.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        error_1 = _b.sent();
                        console.log(error_1);
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    ResourceStoreInstance.prototype.getResourceBundleParamsFromModuleSession = function () {
        var _a = this, shopUrl = _a.shopUrl, locale = _a.locale, liveResource = _a.liveResource;
        return { shopUrl: shopUrl, locale: locale, liveResource: liveResource };
    };
    return ResourceStoreInstance;
}());
export var ResourceStore = new ResourceStoreInstance();
