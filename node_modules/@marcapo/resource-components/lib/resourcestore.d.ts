import { IModuleSession } from "@marcapo/modulesession";
import { AxiosInstance } from "axios";
export interface IResourceKey {
    key: string;
    value: string;
}
declare class ResourceStoreInstance {
    resourceKeys: IResourceKey[];
    locale: any;
    shopUrl: any;
    restClient: AxiosInstance;
    init({ shopUrl, locale, restClient, }: {
        shopUrl: string;
        locale: string;
        restClient?: AxiosInstance;
    }): void;
    initModuleSession(moduleSession: IModuleSession): void;
    getResourceValue(key: string, context?: Record<string, any>): Promise<string>;
    getUnresolvedResourceValue(key: string): string;
    get liveResource(): boolean;
    initResourceKeys(resourceKeys: string[]): Promise<void>;
    initResourceBundle(resourceBundleNameStart: string, shopUrlOverride?: string): Promise<void>;
    getResourceBundleParamsFromModuleSession(): {
        liveResource: boolean;
        shopUrl: string;
        locale: string;
    };
}
export declare const ResourceStore: ResourceStoreInstance;
export {};
