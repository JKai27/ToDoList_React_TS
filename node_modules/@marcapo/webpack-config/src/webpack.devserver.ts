import { createProxyMiddleware } from "http-proxy-middleware";
import { Configuration as DevServerConfig } from "webpack-dev-server";
import { connectToShellWebSocket } from "./webpack.devproxy.connector";
import { IMfeProxyJson } from "./webpack.helper";

const generateDevServer = ({
	name,
	remotes,
	proxys,
	customPort,
}: {
	name: string;
	remotes: Record<string, string>;
	proxys: IMfeProxyJson[];
	customPort?: string | number;
}): DevServerConfig => ({
	onBeforeSetupMiddleware: dev => {
		if (!dev.app) {
			throw new Error("webpack-dev-server is not defined");
		}
		const platformProxy = createProxyMiddleware({
			target: "https://evo.marcapointegration.com",
			changeOrigin: true,
		});
		const gatewayservice = createProxyMiddleware({
			target: "http://localhost:5050",
		});
		dev.app.use([/.*service/, "/js/", "/css"], gatewayservice);
		dev.app.use("/marcapo_platform", platformProxy);

		if (proxys.length > 0) {
			proxys.forEach(proxy => {
				dev.app?.use(proxy.path, createProxyMiddleware(proxy.proxy));
			});
		}
	},
	client: {
		overlay: false,
	},
	port: customPort ?? "auto",
	headers: {
		"Access-Control-Allow-Origin": "*",
	},
	onListening: dev => {
		if (!dev.server?.address()) {
			throw new Error("webpack-dev-server is not defined");
		}
		if (dev.server?.address() !== null) {
			const port = (dev.server.address() as any).port;
			console.log(`[Devserver] registering MFE ${name} with port ${port}`);
			const wsServerUrl = `ws://localhost:5005?service=${name}&port=${port}`;
			void connectToShellWebSocket({ websocketServerLocation: wsServerUrl, remotes });
		}
	},
});

export { generateDevServer };
