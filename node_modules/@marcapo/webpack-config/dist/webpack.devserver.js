"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateDevServer = void 0;
const http_proxy_middleware_1 = require("http-proxy-middleware");
const webpack_devproxy_connector_1 = require("./webpack.devproxy.connector");
const generateDevServer = ({ name, remotes, proxys, customPort, }) => ({
    onBeforeSetupMiddleware: dev => {
        if (!dev.app) {
            throw new Error("webpack-dev-server is not defined");
        }
        const platformProxy = (0, http_proxy_middleware_1.createProxyMiddleware)({
            target: "https://evo.marcapointegration.com",
            changeOrigin: true,
        });
        const gatewayservice = (0, http_proxy_middleware_1.createProxyMiddleware)({
            target: "http://localhost:5050",
        });
        dev.app.use([/.*service/, "/js/", "/css"], gatewayservice);
        dev.app.use("/marcapo_platform", platformProxy);
        if (proxys.length > 0) {
            proxys.forEach(proxy => {
                dev.app?.use(proxy.path, (0, http_proxy_middleware_1.createProxyMiddleware)(proxy.proxy));
            });
        }
    },
    client: {
        overlay: false,
    },
    port: customPort ?? "auto",
    headers: {
        "Access-Control-Allow-Origin": "*",
    },
    onListening: dev => {
        if (!dev.server?.address()) {
            throw new Error("webpack-dev-server is not defined");
        }
        if (dev.server?.address() !== null) {
            const port = dev.server.address().port;
            console.log(`[Devserver] registering MFE ${name} with port ${port}`);
            const wsServerUrl = `ws://localhost:5005?service=${name}&port=${port}`;
            void (0, webpack_devproxy_connector_1.connectToShellWebSocket)({ websocketServerLocation: wsServerUrl, remotes });
        }
    },
});
exports.generateDevServer = generateDevServer;
