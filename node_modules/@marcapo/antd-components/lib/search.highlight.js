var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
import { jsx as _jsx } from "react/jsx-runtime";
export var HighlightSearch = function (props) {
    var e_1, _a;
    // eslint-disable-next-line prefer-const
    var hitLength = props.hitLength, search = props.search, value = props.value, _b = props.parent, parent = _b === void 0 ? ['<span class="color-primary">', "</span>"] : _b, rest = __rest(props, ["hitLength", "search", "value", "parent"]);
    if (!hitLength) {
        hitLength = 3;
    }
    if (search.length >= hitLength) {
        if (search && parent[0] && parent[1]) {
            var pattern = new RegExp(search, "gmi");
            var matches_2 = value.match(pattern);
            if (matches_2) {
                if (matches_2 === null || matches_2 === void 0 ? void 0 : matches_2[0]) {
                    try {
                        for (var matches_1 = __values(matches_2), matches_1_1 = matches_1.next(); !matches_1_1.done; matches_1_1 = matches_1.next()) {
                            var match = matches_1_1.value;
                            value = value.replace(match, "#");
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (matches_1_1 && !matches_1_1.done && (_a = matches_1.return)) _a.call(matches_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                }
                var splittedValues_1 = value.split("#");
                var spans_1 = [];
                splittedValues_1.forEach(function (entry, index) {
                    if (index < splittedValues_1.length - 1) {
                        spans_1.push("".concat(entry).concat(parent[0]).concat(matches_2[index]).concat(parent[1]));
                    }
                    else {
                        spans_1.push(entry);
                    }
                });
                value = spans_1.join("");
            }
        }
    }
    return _jsx("span", __assign({}, rest, { dangerouslySetInnerHTML: { __html: value } }));
};
//# sourceMappingURL=search.highlight.js.map