var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { jsx as _jsx } from "react/jsx-runtime";
import React from "react";
var ErrorBoundary = /** @class */ (function (_super) {
    __extends(ErrorBoundary, _super);
    function ErrorBoundary(props) {
        var _a;
        var _this = _super.call(this, props) || this;
        _this.state = {
            hasError: false,
            fallback: (_a = props.fallback) !== null && _a !== void 0 ? _a : _jsx("div", { children: "\u26A0\uFE0F" }),
        };
        return _this;
    }
    ErrorBoundary.getDerivedStateFromError = function () {
        return { hasError: true };
    };
    ErrorBoundary.prototype.render = function () {
        if (this.state.hasError) {
            return this.state.fallback;
        }
        return this.props.children;
    };
    ErrorBoundary.prototype.componentDidCatch = function (error, errorInfo) {
        if (this.props.forwardToModuleError) {
            var stack = "";
            if (typeof errorInfo.componentStack === "string") {
                stack = btoa(errorInfo.componentStack);
            }
            var info = btoa(error.name);
            window.location.href = "".concat(window.location.origin, "/marcapo_platform/ModuleError.do?moduleErrorInfo=").concat(info, "&stack=").concat(stack);
        }
        console.log("Error: ".concat(error));
    };
    return ErrorBoundary;
}(React.Component));
export { ErrorBoundary };
//# sourceMappingURL=errorboundary.js.map