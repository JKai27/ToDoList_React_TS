import { observer } from "mobx-react-lite";
import { FC } from "react";
import { IProps } from "./interfaces/responsivecomponent";
import { ResponsiveStore } from ".";

export const ResponsiveComponent: FC<IProps> = observer(props => {
	const { hideOnSize, showOnSize, hideUnder, hideOver, showUnder, showOver, equal } = props;
	let showChildren = true;
	const currentSize: string = ResponsiveStore.getCurrentSize();
	if (hideOnSize) {
		hideOnSize.forEach(size => {
			if (size === currentSize) {
				showChildren = false;
			}
		});
	}
	if (showOnSize) {
		showChildren = false;
		showOnSize.forEach(size => {
			if (size === currentSize) {
				showChildren = true;
			}
		});
	}

	if (showUnder && showOver) {
		showChildren = ResponsiveStore.isUnder(showUnder, equal) || ResponsiveStore.isOver(showOver, equal);
	} else if (hideUnder && hideOver) {
		showChildren = !(ResponsiveStore.isUnder(hideUnder, equal) || ResponsiveStore.isOver(hideOver, equal));
	} else {
		if (hideUnder) {
			showChildren = !ResponsiveStore.isUnder(hideUnder, equal);
		}
		if (hideOver) {
			showChildren = !ResponsiveStore.isOver(hideOver, equal);
		}
		if (showUnder) {
			showChildren = ResponsiveStore.isUnder(showUnder, equal);
		}
		if (showOver) {
			showChildren = ResponsiveStore.isOver(showOver, equal);
		}
	}

	if (showChildren) {
		return <>{props.children}</>;
	}
	return null;
});
