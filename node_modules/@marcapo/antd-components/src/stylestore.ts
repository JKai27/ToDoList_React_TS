import { ICachedStyle } from "./interfaces/cachedstyle";

class StyleStoreInstance {
	public cachedStyles: ICachedStyle[] = [];

	public getStyleValueByCssClassName(cssClassName: string, attribute: string): string {
		let value: string = "";

		const cachedStyle = this.cachedStyles.find(
			style => style.cssClassName === cssClassName && style.attribute === attribute
		);

		if (!cachedStyle) {
			const dummyDiv = document.createRange().createContextualFragment(`<div id='dummyDiv' class="${cssClassName}" />`);
			document.body.appendChild(dummyDiv);
			const div = document.querySelector("#dummyDiv");
			if (div) {
				const style: any = window.getComputedStyle(div);
				value = style[attribute];
				const newCachedStyle: ICachedStyle = {} as ICachedStyle;
				newCachedStyle.attribute = attribute;
				newCachedStyle.value = value;
				newCachedStyle.cssClassName = cssClassName;
				this.cachedStyles.push(newCachedStyle);
				if (div.parentNode) {
					div.parentNode.removeChild(div);
				}
			}
		} else {
			value = cachedStyle.value;
		}
		return value;
	}
}

export const StyleStore = new StyleStoreInstance();
